import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as e,o as t}from"./app-CBNpZX55.js";const l={};function n(r,i){return t(),a("div",null,i[0]||(i[0]=[e(`<h1 id="blog-design" tabindex="-1"><a class="header-anchor" href="#blog-design"><span>Blog Design</span></a></h1><p>Vuepress 以及为博客网站的配置提供了很多选项，基于此，可以设计出各式各样的博客样式。本篇记录了当前博客网站的设计思路，包括Sidebar、Navbar、MainPage、font、文本格式等方面。同时，还记录了一些bugs/tricks。</p><h2 id="sidebar" tabindex="-1"><a class="header-anchor" href="#sidebar"><span>Sidebar</span></a></h2><p>对于一个目录 /path，有两种逻辑来显示它：</p><ul><li>对于 /path 下的每个子目录，生成一个表项。该表项只包含链接，不可展开。路由至该子目录后，重新绘制 Sidebar，显示子目录内容。</li><li>对于 /path 下的每个子目录，生成一个表项。该表项可折叠。路由至子目录后，不再重新绘制 Sidebar。</li></ul><p>对于级别较高的目录，采取第一种；对于级别较低的、接近 terminal 的目录，采取第二种，以避免展开后，Sidebar 内的内容过少。</p><p><strong>这种设计存在的问题</strong>：</p><ul><li>进入子目录后，只能在文章顶部路由回到上一级目录，在 Sidebar 中没有上一级目录的选项。</li><li>对于 /home 下的各级目录，想要切换到 sibling 目录，必须回一次 /home，这种巨大的页面风格差距会带来不良的阅读体验。</li></ul><h2 id="navbar" tabindex="-1"><a class="header-anchor" href="#navbar"><span>Navbar</span></a></h2><p>Navbar 是全局不变的。因此，相较于 Sidebar，其核心功能应该是提供快速回到高级别目录的 shortcut。（这似乎刚好解决了 Sidebar 存在的问题）。一个简单的设计思路是，将 /home 目录下的直接子目录作为 Navbar 的表项。</p><p><strong>这种设计存在的问题</strong>：</p><ul><li>对于目前的网站体量，在逻辑上似乎不足以划分为独立的模块。以 Mister-Hope 的 Navbar 为例，其表项分别为：代码笔记、随笔、软件教程。相比之下，Work、DevInit 的交叉程度较大。但在路由逻辑上，必须这样设计。</li></ul><h2 id="articles-on-mainpage" tabindex="-1"><a class="header-anchor" href="#articles-on-mainpage"><span>Articles on MainPage</span></a></h2><p>在文章的 frontmatter 中设置 article: false 可以将文章从主页隐去<a href="https://theme-hope.vuejs.press/zh/config/frontmatter/info.html" target="_blank" rel="noopener noreferrer">tutorial</a>。</p><p>可以在 MainPage 上只显示每个目录的 intro page，将 ArticleList 作为一个平铺化的索引列表。但是个人认为这样与结构化的索引工具 Navbar 和 Sidebar 功能重复了，毕竟人类还是习惯于基于文件系统的树状结构进行检索。因此，在 MainPage 上只按照时间顺序放置文章，如果有额外的优先级，考虑使用 star 属性。</p><h2 id="static-url" tabindex="-1"><a class="header-anchor" href="#static-url"><span>Static URL</span></a></h2><p>对于 src/path/to/markdown.md，用到的所有图片均存放在 .vuepress/public/assets/path/to/markdown/ 目录下。</p><h2 id="format-usage" tabindex="-1"><a class="header-anchor" href="#format-usage"><span>Format Usage</span></a></h2><ul><li>在涉及到换行时，行内代码会保持为一个整体，并不支持拆分。这会导致在排版时，可能会出现过于稀疏的行。因此，blog内容会尽量减少行内代码格式的使用：对于文件名、目录名、函数名等（即使会需要添加转义符），使用纯文本格式；只有对命令行语句，以及会被 vuepress 自动生成链接的文件名，采用行内代码。</li><li>正文中的所有标点符号，均适用中文标点。</li><li>英文内容前后均添加空格。</li></ul><h2 id="image-style" tabindex="-1"><a class="header-anchor" href="#image-style"><span>Image Style</span></a></h2><p>对于 markdown 内的插图，额外添加阴影和圆角样式。由于在主题文档中未找到相关内容，所以通过在 index.scss 中覆盖相关样式实现。注意到这里并不能直接对 img 进行样式覆盖，因为这会影响到主页的图标。虽然主页图标支持样式自定义，但无法从已有的样式中删除一部分。因此，需要在插入图片时，附带额外的类别信息，以在 css 文件中区分。可以通过在 URL fragment 中插入类别信息（<a href="https://dzone.com/articles/how-to-style-images-with-markdown" target="_blank" rel="noopener noreferrer">Explanation</a>）：</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">![</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Alt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span><span style="--shiki-light:#A626A4;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#A626A4;--shiki-light-text-decoration:inherit;--shiki-dark:#C678DD;--shiki-dark-text-decoration:underline;">image.jpg#class-name</span><span style="--shiki-light:#A626A4;--shiki-dark:#E06C75;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>并且在 index.scss 对属于 class-name 类别的 image 进行单独样式设置：</p><div class="language-scss line-numbers-mode" data-highlighter="shiki" data-ext="scss" data-title="scss" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">img</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">src</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">*=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">#class-name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  border-radius: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  box-shadow: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 8</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> rgba</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">); </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="tricks-or-bugs" tabindex="-1"><a class="header-anchor" href="#tricks-or-bugs"><span>Tricks or Bugs</span></a></h2><p>因为目前对于前端的知识了解甚少，对于遇到的问题很难判断到底是 bug 还是使用不规范引发的错误。</p><ul><li><p>在段落的前一行，某些格式无法正常渲染，文本无法选中。首先在 windows 上发现，最后一行文本之所以无法选中，是因为鼠标悬停在其上时，仍然属于下一行标题的范围，会选中下一行标题。通过拉取一个初始 site，并进行 difftest 发现，是标题属性的 position: relative; 引发的。</p></li><li><p>在 pallette.scss 中修改字体并不能起效，目前通过在 index.scss 手动覆盖对应的字体样式（如body、h1等），来实现字体修改。另外，如果不能自由调整 font-weight，要注意 stylesheet 的 url 是否包含了所有的字体粗细。例如如下的 url：</p><div class="language-scss line-numbers-mode" data-highlighter="shiki" data-ext="scss" data-title="scss" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">https:</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//fonts.googleapis.com/css2?family=IBM+Plex+Mono:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&amp;display=swap</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>则可用的 font-weight 为 100、200...700</p></li></ul>`,27)]))}const d=s(l,[["render",n],["__file","blog.html.vue"]]),o=JSON.parse('{"path":"/blog.html","title":"Blog Design","lang":"en-US","frontmatter":{"icon":"edit","excerpt":"<p> 当前博客网站的设计思路。 </p>","sticky":true,"description":"Blog Design Vuepress 以及为博客网站的配置提供了很多选项，基于此，可以设计出各式各样的博客样式。本篇记录了当前博客网站的设计思路，包括Sidebar、Navbar、MainPage、font、文本格式等方面。同时，还记录了一些bugs/tricks。 Sidebar 对于一个目录 /path，有两种逻辑来显示它： 对于 /path ...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://zhangmxxx.github.io/BlogSite/blog.html"}],["meta",{"property":"og:site_name","content":"Site MallocSimenons"}],["meta",{"property":"og:title","content":"Blog Design"}],["meta",{"property":"og:description","content":"Blog Design Vuepress 以及为博客网站的配置提供了很多选项，基于此，可以设计出各式各样的博客样式。本篇记录了当前博客网站的设计思路，包括Sidebar、Navbar、MainPage、font、文本格式等方面。同时，还记录了一些bugs/tricks。 Sidebar 对于一个目录 /path，有两种逻辑来显示它： 对于 /path ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Blog Design\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MallocSimenons\\",\\"url\\":\\"https://zhangmxxx.github.io/BlogSite/intro.html\\"}]}"]]},"headers":[{"level":2,"title":"Sidebar","slug":"sidebar","link":"#sidebar","children":[]},{"level":2,"title":"Navbar","slug":"navbar","link":"#navbar","children":[]},{"level":2,"title":"Articles on MainPage","slug":"articles-on-mainpage","link":"#articles-on-mainpage","children":[]},{"level":2,"title":"Static URL","slug":"static-url","link":"#static-url","children":[]},{"level":2,"title":"Format Usage","slug":"format-usage","link":"#format-usage","children":[]},{"level":2,"title":"Image Style","slug":"image-style","link":"#image-style","children":[]},{"level":2,"title":"Tricks or Bugs","slug":"tricks-or-bugs","link":"#tricks-or-bugs","children":[]}],"readingTime":{"minutes":4.21,"words":1264},"filePathRelative":"blog.md","autoDesc":true}');export{d as comp,o as data};
